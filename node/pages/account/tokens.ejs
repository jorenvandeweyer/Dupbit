<!DOCTYPE html>
<html lang="en">
    <head>
        <%- include ../components/head %>
        <script src="https://cdn.jsdelivr.net/npm/vue"></script>
    </head>
    <body>
        <%- include ../components/header %>
        <br>

        <div class="container">
			<a class="btn btn-primary mb-3" href="/account" role="button">Back</a>
			<div class="card">
				<div class="card-header"><b>Manage Tokens</b></div>
				<div class="card-body">
					<table class='table table-hover'>
						<thead>
                            <tr>
                                <th>ID</th>
                                <th>App_Type</th>
                                <th>Info</th>
                                <th>IP</th>
                                <th>Created</th>
                                <th>Delete</th>
                            </tr>
						</thead>
						<tbody>
                            <tr v-for="token in tokens">
                                <td>{{token.tid}}</td>
                                <td>{{token.app_type}}</td>
                                <td v-html= "parseInfo(token.info).join('<br>')"></td>
                                <td>{{token.ip}}</td>
                                <td>{{token.timestamp}}</td>
                                <td><button type='button' class='btn btn-danger' @click='deleteToken(token.tid)'>Revoke</button></td>
                            </tr>
						</tbody>
					</table>
				</div>
			</div>
		</div>

        <%- include ../components/footer %>
    </body>

    <script>
    async function main() {
        const result = await Request.GET("/api/connect/devices");
        if (result && result.success) {
            vm.tokens = result.tokens;
        }
    }

    const vm = new Vue({
        el: ".container",
        data: {
            tokens: [],
        },
        methods: {
            deleteToken: async function (tid) {
                const result = await Request.GET(`/api/account/removeToken?tid=${tid}`);
                if (result && result.success) {
                    this.tokens = this.tokens.filter(token => token.tid !== tid);
                } else {
                    alert(`Please take contact with the website owner and provide the error string\nError: removeToken?tid=${tid} success=false`);
                }
            },
            parseInfo: function (info) {
                try {
                    const obj = JSON.parse(info);
                    let browser, os, device;

                    if (obj.os && obj.os.name && obj.os.version) {
                        os = `${obj.os.name} ${obj.os.version}`;
                    }
                    if (obj.device && obj.device.name && obj.device.type) {
                        device = `${obj.device.name} ${obj.device.type}`;
                    }
                    if (obj.browser && obj.browser.name && obj.browser.version) {
                        browser = `${obj.browser.name} ${obj.browser.version}`;
                    }
                    return [browser, os, device].filter(line => line !== undefined);
                } catch(e) {
                    return info;
                }
            },
        }
    });

    main();
    </script>

</html>
